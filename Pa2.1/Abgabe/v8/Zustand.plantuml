@startuml

'StateInitializeMcu'
[*] --> StateInitializeMcu : MCU was switched on or reset \n [PowerSwitch = ON or Reset Button is pressed]
StateInitializeMcu --> StateCalibrateLineSensors : Initialization done
StateInitializeMcu : entry / Starting the initialization
StateInitializeMcu : exit / DisplayTeamName on the OledDisplay
note left of StateInitializeMcu
    The team name will be shown on the display all the time. 
    Thus, the team name will be displayed more than 2 seconds 
    before the start (count down of at least 3 seconds).
end note

'StateCalibrateLineSensors'
StateCalibrateLineSensors --> StateReadyToDrive : Calibration done

'StateReadyToDrive'
StateReadyToDrive --> StateSetParameters :ParamButton is released
StateReadyToDrive --> StateDisplayCountdown : StartButton is released
StateReadyToDrive --> StateCalibrateLineSensors : CalibrateButton is released
StateReadyToDrive : entry / Display TeamName on the OledDisplay
note right of StateReadyToDrive
The TeamName is permanently displayed in line 1
end note

'StateDisplayCountdown'
StateDisplayCountdown --> StateDriveToStart : CountDown is finished [DisplayCountdownTimer > 3s]
StateDisplayCountdown: entry /  Start Timer DisplayCountdownTimer
StateDisplayCountdown: entry / Starts the Countdown from 3 to 0 on the OledDisplay
StateDisplayCountdown: exit /  Stop Timer DisplayCountdownTimer

'StateDriveToStart'
StateDriveToStart --> StateDriveToFinish : StartFinishLine is recognized
StateDriveToStart --> StateErrorHandler : DriveToStart is active for more than 10s or The GuideLine is lost
StateDriveToStart: entry / The DriveMotors are supplied with power 
StateDriveToStart: entry / Start Timer DriveToStartTimer
StateDriveToStart: do / Follow the GuideLine 
StateDriveToStart: exit / The Buzzer emits the ShortBeep
StateDriveToStart: exit / Stop Timer DriveToStartTimer
StateDriveToStart: exit / Start the LapTimer
note right of StateDriveToStart
    It is assumed that no gaps occur in this 
    state, as the robot is set up only a few 
    centimeters from the start 
    (at least 3 cm from the start)
end note


'StateDriveToFinish'
StateDriveToFinish --> StateErrorHandler : LapTimer > 20s
StateDriveToFinish --> StateDisplayLapTime : StartFinishLine is recognized
StateDriveToFinish : do / Follow the GuideLine 

'StateDriveOverGap'
StateDriveOverGap --> StateErrorHandler : State DriveOverGap is active for more than 5s [DriveOverGapTimer > 5s]
StateDriveOverGap  --> StateDriveToFinish : The GuideLine is recognized
StateDriveOverGap: entry / Start Timer DriveOverGapTimer
StateDriveOverGap : do / The Robot searches for the GuideLine
StateDriveOverGap: exit / End Timer DriveOverGapTimer

'StateDisplayLapTime
StateDisplayLapTime  --> StateReadyToDrive : Power to the DriveMotors is stopped
StateDisplayLapTime : entry / Stop the LapTimer
StateDisplayLapTime : entry / Stop the power to the DriveMotors
StateDisplayLapTime : exit / Shows the completed lap time on the OledDisplay
note bottom of StateDisplayLapTime
The laptime is permanently displayed in line 2
end note

'StateSetParameters
StateSetParameters --> StateReadyToDrive : State ReadyToDrive is active for more \n than 0.5s [SetparametersTimer > 0.5s]
StateSetParameters: entry / Cycle to the next parameter set
StateSetParameters: entry / Start Timer SetparametersTimer
StateSetParameters: exit / Display parameter set number
StateSetParameters: exit / Stop Timer SetparametersTimer
note bottom of StateSetParameters
The parameter set number is permanently displayed in line 3
end note

'StateErrorHandler
StateErrorHandler: entry / Stop the power to the DriveMotors
StateErrorHandler: entry / Play the AlarmSignal on the Buzzer
StateErrorHandler: do / Display error message on the OledDisplay

@enduml